{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["days","hours","minutes","seconds","date","Date","now","getDaysHoursMinutesSeconds","interval","Math","floor","d","h","m","s","App","intervalDate","intervalSeconds","startDate","endDate","setInterval","document","getElementById","innerText","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yJAGIA,EACAC,EACAC,EACAC,E,uCAEAC,G,WAAO,IAAIC,KAAK,yBAChBC,EAAM,IAAID,KAAK,wBAObE,EAA6B,SAACC,GAKnC,OAJAR,EAAOS,KAAKC,MAAMF,EAAQ,OAC1BP,EAAQQ,KAAKC,MAAOF,EAAQ,MAAT,MACnBN,EAAUO,KAAKC,MAAOF,EAAQ,KAAgB,IAC9CL,EAAUM,KAAKC,MAAOF,EAAW,GAAM,GACpB,CAClBG,EAAGX,EACHY,EAAGX,EACHY,EAAGX,EACHY,EAAGX,IA8EUY,MAtEf,WACC,IAAIC,EACAC,EAxBoBC,EAAWC,EAAXD,EA0BUZ,EA1BCa,EA0BIf,EAAvCa,EAzBsBR,KAAKC,OAAOS,EAAUD,GAAa,KAqB3C,MAKOX,EAA2BU,GAA1CN,EALQ,EAKRA,EAAGC,EALK,EAKLA,EAAGC,EALE,EAKFA,EAAGC,EALD,EAKCA,EAcf,OAbAM,aAAY,WAEXJ,EAAeT,EADfU,EAA4BA,EAVlB,GAYVN,EAAIU,SAASC,eAAe,MAAMC,UAAYP,EAAaL,EAC3DA,EAAIU,SAASC,eAAe,MAAMC,UAAYP,EAAaL,EAC3DC,EAAIS,SAASC,eAAe,MAAMC,UAAYP,EAAaJ,EAC3DA,EAAIS,SAASC,eAAe,MAAMC,UAAYP,EAAaJ,EAC3DC,EAAIQ,SAASC,eAAe,MAAMC,UAAYP,EAAaH,EAC3DA,EAAIQ,SAASC,eAAe,MAAMC,UAAYP,EAAaH,EAC3DC,EAAIO,SAASC,eAAe,MAAMC,UAAYP,EAAaF,EAC3DA,EAAIO,SAASC,eAAe,MAAMC,UAAYP,EAAaF,IACzD,KAGF,yBAASU,UAAU,MAAnB,SACC,sBAAKA,UAAU,iBAAf,UACC,sDACA,sBAAKA,UAAU,iBAAf,UACC,sBAAKA,UAAU,cAAf,UACC,oBAAIC,GAAG,KAAKD,UAAU,YAAtB,SACEb,IAEF,oBAAIc,GAAG,KAAKD,UAAU,aAAtB,SACEb,IAGF,oBAAIa,UAAU,aAAd,qBAED,sBAAKA,UAAU,cAAf,UACC,oBAAIC,GAAG,KAAKD,UAAU,YAAtB,SACEZ,IAEF,oBAAIa,GAAG,KAAKD,UAAU,aAAtB,SACEZ,IAGF,oBAAIY,UAAU,aAAd,sBAED,sBAAKA,UAAU,cAAf,UACC,oBAAIC,GAAG,KAAKD,UAAU,YAAtB,SACEX,IAEF,oBAAIY,GAAG,KAAKD,UAAU,aAAtB,SACEX,IAGF,oBAAIW,UAAU,aAAd,wBAED,sBAAKA,UAAU,cAAf,UACC,oBAAIC,GAAG,KAAKD,UAAU,YAAtB,SACEV,IAEF,oBAAIW,GAAG,KAAKD,UAAU,aAAtB,SACEV,IAGF,oBAAIU,UAAU,aAAd,iCCnFSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDhB,SAASC,eAAe,SAMzBI,K","file":"static/js/main.964637b5.chunk.js","sourcesContent":["import \"./App.scss\";\n\n// Data hardcoded\nlet days;\nlet hours;\nlet minutes;\nlet seconds;\n\nlet date = new Date(\"Sep 23 2022 00:00:00\");\nlet now = new Date(\"Sep 23 2021 00:00:00\");\n\nconst getIntervalTime = (startDate, endDate) => {\n\tlet secondsInterval = Math.floor((endDate - startDate) / 1000);\n\treturn secondsInterval;\n};\n\nconst getDaysHoursMinutesSeconds = (interval) => {\n\tdays = Math.floor(interval / (24 * 60 * 60));\n\thours = Math.floor((interval % (24 * 60 * 60)) / (60 * 60));\n\tminutes = Math.floor((interval % (60 * 60)) / 60);\n\tseconds = Math.floor((interval % 60) / 1);\n\treturn (interval = {\n\t\td: days,\n\t\th: hours,\n\t\tm: minutes,\n\t\ts: seconds,\n\t});\n};\n\nconst countdown = (n) => {\n\treturn n - 1;\n};\n\nfunction App() {\n\tlet intervalDate;\n\tlet intervalSeconds;\n\n\tintervalSeconds = getIntervalTime(now, date);\n\tlet { d, h, m, s } = getDaysHoursMinutesSeconds(intervalSeconds);\n\tsetInterval(() => {\n\t\tintervalSeconds = countdown(intervalSeconds);\n\t\tintervalDate = getDaysHoursMinutesSeconds(intervalSeconds);\n\t\td = document.getElementById(\"d1\").innerText = intervalDate.d;\n\t\td = document.getElementById(\"d2\").innerText = intervalDate.d;\n\t\th = document.getElementById(\"h1\").innerText = intervalDate.h;\n\t\th = document.getElementById(\"h2\").innerText = intervalDate.h;\n\t\tm = document.getElementById(\"m1\").innerText = intervalDate.m;\n\t\tm = document.getElementById(\"m2\").innerText = intervalDate.m;\n\t\ts = document.getElementById(\"s1\").innerText = intervalDate.s;\n\t\ts = document.getElementById(\"s2\").innerText = intervalDate.s;\n\t}, 1000);\n\n\treturn (\n\t\t<section className='App'>\n\t\t\t<div className='main-container'>\n\t\t\t\t<h3>We're launching soon</h3>\n\t\t\t\t<div className='date-container'>\n\t\t\t\t\t<div className='single-card'>\n\t\t\t\t\t\t<h1 id='d1' className='card dark'>\n\t\t\t\t\t\t\t{d}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h1 id='d2' className='card light'>\n\t\t\t\t\t\t\t{d}\n\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t<h3 className='date-label'>Days</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='single-card'>\n\t\t\t\t\t\t<h1 id='h1' className='card dark'>\n\t\t\t\t\t\t\t{h}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h1 id='h2' className='card light'>\n\t\t\t\t\t\t\t{h}\n\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t<h3 className='date-label'>Hours</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='single-card'>\n\t\t\t\t\t\t<h1 id='m1' className='card dark'>\n\t\t\t\t\t\t\t{m}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h1 id='m2' className='card light'>\n\t\t\t\t\t\t\t{m}\n\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t<h3 className='date-label'>Minutes</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='single-card'>\n\t\t\t\t\t\t<h1 id='s1' className='card dark'>\n\t\t\t\t\t\t\t{s}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h1 id='s2' className='card light'>\n\t\t\t\t\t\t\t{s}\n\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t<h3 className='date-label'>Seconds</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}